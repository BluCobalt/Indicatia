buildscript {
    repositories {
        jcenter()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven { url = "https://repo.spongepowered.org/maven" }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath "org.spongepowered:mixingradle:0.6-SNAPSHOT"
    }
}

plugins {
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

def mcVersion = project.mc_version

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.mixin"

version = project.version
group = "stevekung.mods.indicatia"
archivesBaseName = "Indicatia-All"
sourceCompatibility = targetCompatibility = 1.8

minecraft {
    version = "${forge_version}"
    runDir = "run"
    mappings = "${mcp_mapping}"
    makeObfSourceJar = false

    configurations {
        embed
        implementation.extendsFrom(embed)
    }

    dependencies {
        deobfCompile "stevekungs-lib:SteveKunG's-Lib-1.12.2:1.1.5:deobf"
        embed("org.spongepowered:mixin:0.7.11-SNAPSHOT") { transitive = false }
    }

    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url = "http://repo.spongepowered.org/maven/"
        }
        maven {
            url = "https://minecraft.curseforge.com/api/maven/"
        }
    }

    sourceSets {
        main {
            ext.refMap = "mixins.indicatia.refmap.json"
        }
    }

    jar {
        from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude "LICENSE.txt", "META-INF/*.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
        }
        manifest {
            attributes("FMLAT": "indicatia_at.cfg",
                    "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                    "MixinConfigs": "mixins.indicatia.json",
                    "ForceLoadAsMod": "true"
            )
        }
        baseName = "Indicatia-" + mcVersion
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
        baseName = "Indicatia-" + mcVersion
        classifier = "sources"
    }

    task deobfJar(type: Jar) {
        from sourceSets.main.output
        from(configurations.embed.collect { it.isDirectory() ? it : zipTree(it) }) {
            exclude "LICENSE.txt", "META-INF/*.txt", "META-INF/MANIFSET.MF", "META-INF/maven/**", "META-INF/*.RSA", "META-INF/*.SF"
        }
        manifest {
            attributes("FMLAT": "indicatia_at.cfg",
                    "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                    "MixinConfigs": "mixins.indicatia.json",
                    "ForceLoadAsMod": "true"
            )
        }
        baseName = "Indicatia-" + mcVersion
        classifier = "deobf"
    }

    artifacts {
        archives sourcesJar
        archives deobfJar
    }
}